{"name":"puppetize.net/infrastructure","tagline":"Puppet manifests and Vagrant boxes for puppetize.net.","body":"About This Project\r\n==================\r\n\r\nThe infrastructure project focuses on building the OpenStack private\r\ncloud that will host the online tutorial application and eventually\r\nthe whole of [puppetize.net](http://puppetize.net). It builds on the\r\n[OpenStack modules](https://github.com/puppetlabs/puppetlabs-openstack)\r\ndeveloped by Dan Bode (@bodepd) at PuppetLabs and includes Vagrant\r\nboxes and RSpec definitions for test-driven development.\r\n\r\nThe goal is to make it extremely easy to participate in the development\r\nof the site itself and its underlying technology stack, such as OpenStack\r\nand Puppet.\r\n\r\nGetting Started\r\n===============\r\n\r\nBefore you begin, make sure that you have\r\n[Vagrant](http://vagrantup.com),\r\n[VeeWee](https://github.com/jedi4ever/veewee) and\r\n[Rake](http://rake.rubyforge.org/) installed and working.\r\n\r\nClone the [infrastructure](https://github.com/puppetize/infrastructure)\r\nrepository recursively, including all referenced submodules.\r\n```\r\n$ git clone --recursive git@github.com:puppetize/infrastructure\r\n```\r\n\r\nBuilding Baseboxes\r\n------------------\r\n\r\nBase boxes for the included Vagrant boxes can be built using VeeWee and\r\nthere is a Rake task which makes this a one-step process.\r\n```\r\n$ (cd boxes/base && rake install)\r\n```\r\n\r\nThis will download the installation media for all supported operating\r\nsystems, perform a non-interactive installation, build Vagrant box\r\npackages (in the boxes/base directory) and install those packages into\r\nVagrant.\r\n\r\nYou can free up some disk space afterwards by deleting the Vagrant box\r\npackage files, or you can keep them around to install them elsewhere.\r\n```\r\n$ (cd boxes/base && rake destroy)\r\n```\r\n\r\nOpenStack Cloud Controller\r\n--------------------------\r\n\r\nThe OpenStack cloud controller includes a self-contained installation\r\nof OpenStack, much like [devstack](http://devstack.org/) but is entirely\r\nprovisioned via Puppet.  The cloud controller provides Horizon, a web-based\r\nmanagement interface for OpenStack at http://cloud.puppetize.net.\r\n\r\nTry it out locally by starting the \"cloud\" box.\r\n```\r\n$ (cd boxes/cloud && vagrant up)\r\n```\r\n\r\nWhen Vagrant has finished provisioning the box, open\r\n[http://localhost:8080/horizon](http://localhost:8080/horizon) in a web\r\nbrowser and log in using the username \"admin\" and password \"changeme\".\r\n\r\nOther Vagrant Boxes\r\n-------------------\r\n\r\nThere are other Vagrant boxes in the ```boxes``` directory, such as\r\n\"devstack\", which aren't part of the main infrastructure but are used\r\nfor development.  Each Vagrantfile normally contains the provisioning\r\ninstructions or the name of the top-level Puppet class which defines its\r\nrole.  Take a look and modify them, or add boxes as you wish.\r\n\r\nTest-Driven Development\r\n-----------------------\r\n\r\nExecute the main RSpec test suite using the top-level Rake task \"spec\".\r\nThis will perform some testing on the important Vagrant boxes, such as\r\nthe \"cloud\" box.\r\n```\r\n$ rake spec\r\n/usr/bin/ruby1.9.1 -S rspec ./spec/boxes/cloud_spec.rb ./spec/boxes/vagrant_spec.rb -c -fd\r\nRun options: exclude {:basebox=>#<Proc:./spec/support/vagrant.rb:8>}\r\n\r\nVagrant box 'cloud'\r\n  with any basebox\r\n    running OpenStack Dashboard\r\n      presents a login screen\r\n\r\nVagrant box 'vagrant'\r\n  with any basebox\r\n    has a Vagrant 1.0.x executable in PATH\r\n    has a \"vagrant basebox\" command (VeeWee)\r\n\r\nFinished in 1 minute 30.5 seconds\r\n3 examples, 0 failures\r\n```\r\n\r\nContinuous integration is provided by Travis CI, but is currently limited\r\nand doesn't include these Vagrant box tests.\r\n\r\n**Status**:\r\n[![Build Status](https://travis-ci.org/puppetize/infrastructure.png)](https://travis-ci.org/puppetize/infrastructure)\r\n","google":"UA-40430933-1","note":"Don't delete this file! It's used internally to help with page regeneration."}