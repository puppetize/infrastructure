def redirect_output_to filename, &block
  orig_stderr = $stderr.clone
  orig_stdout = $stdout.clone
  begin
    logfile = File.new(filename, 'w')
    $stdout.reopen logfile
    $stderr.reopen logfile
    yield
  ensure
    $stdout.reopen orig_stdout
    $stderr.reopen orig_stderr
  end
end

desc "Rebuild the box and run some tests"
task :test do
  logfile = 'test.log'

  print "Reinstalling the box (logging to #{logfile}): "
  redirect_output_to logfile do
    sh %{vagrant destroy -f}
    sh %{vagrant up}
  end
  puts "okay"

  test_instance_ip = '192.168.0.3'
  print "Waiting for response from #{test_instance_ip}: "
  if system %{vagrant ssh -c 'tries=30; while [ $tries -gt 0 ] && ! ping -c 1 #{test_instance_ip} >/dev/null; do echo -n .; let tries=$tries-1; done; test $tries -gt 0'}
    puts "okay"
  else
    puts "failed"
    exit 1
  end

  logfile = logfile + '.1'
  print %{Reprovisioning the box (logging to #{logfile}): }
  redirect_output_to logfile do
    sh %{vagrant provision}
  end
  if File.read(logfile) =~ %r{^/Stage}
    puts "failed (unexpected changes)"
  else
    puts "okay (no changes)"
  end
end
